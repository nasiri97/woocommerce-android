copy_gradle_properties: &copy_gradle_properties
  run:
    name: Setup gradle.properties
    command: cp gradle.properties-example gradle.properties

orbs:
  # Using 1.0 of our Orbs means it will use the latest 1.0.x version from https://github.com/wordpress-mobile/circleci-orbs
  android: wordpress-mobile/android@1.0
  bundle-install: toshimaru/bundle-install@0.1.1

version: 2.1
jobs:
  Lint:
    executor:
      name: android/default
      api-version: "28"
    steps:
      - checkout
      - android/restore-gradle-cache:
          cache-prefix: lint-cache-v1
      - <<: *copy_gradle_properties
      - run:
          name: Checkstyle & klint
          command: ./gradlew --stacktrace checkstyle ciktlint
      - run:
          name: Lint
          command: ./gradlew --stacktrace lintVanillaRelease
      - run:
          name: Violations
          when: on_fail
          command: |
            if [ -n "$GITHUB_API_TOKEN" ]; then
              ./gradlew violationCommentsToGitHub -DGITHUB_PULLREQUESTID=${CIRCLE_PULL_REQUEST##*/} -DGITHUB_OAUTH2TOKEN=$GITHUB_API_TOKEN
            else
              echo "Not posting lint errors to Github because \$GITHUB_API_TOKEN is not found"
            fi
      - android/save-gradle-cache:
          cache-prefix: lint-cache-v1
      - store_artifacts:
          path: WooCommerce/build/reports
          destination: reports
  Test:
    executor:
      name: android/default
      api-version: "28"
    steps:
      - checkout
      - android/restore-gradle-cache:
          cache-prefix: tests-cache-v1
      - <<: *copy_gradle_properties
      - run:
          name: Unit tests
          command: ./gradlew --stacktrace testVanillaRelease
      - android/save-gradle-cache:
          cache-prefix: tests-cache-v1
      - android/save-test-results
  Ensure Screenshots Tests Build:
    executor:
      name: android/default
      api-version: "28"
    steps:
      - checkout
      - android/restore-gradle-cache:
          cache-prefix: tests-cache-v1
      - <<: *copy_gradle_properties
      - run:
          # The instrumentation tests are not currently used and do tend to get
          # out of date when the UI changes, failing to build.
          #
          # This is a problem for the screenshots automation, which depends on
          # those tests.
          #
          # This check lets developers know when they accidentally broke the
          # instrumentation tests build, giving them a chance to either fix the
          # build or remove the broken tests if they are now obsolete.
          name: Check instrumentation tests build
          command: ./gradlew assembleVanillaDebugAndroidTest

  Installable Build:
    executor:
      name: android/default
      api-version: "28"
    steps:
      - checkout
      - bundle-install/bundle-install
      - run:
          name: Copy Secrets
          command: bundle exec fastlane run configure_apply
      - android/restore-gradle-cache
      - run:
          name: Build APK
          command: |
            if [ -n "$CIRCLE_PULL_REQUEST" ]; then
              PR_NUMBER=$(basename $CIRCLE_PULL_REQUEST)
              PREFIX="pr-${PR_NUMBER}"
            else
              PREFIX="$CIRCLE_BRANCH"
            fi
            VERSION_NAME="${PREFIX}-build-${CIRCLE_BUILD_NUM}"
            echo "export VERSION_NAME=$VERSION_NAME" >> $BASH_ENV
            ./gradlew --stacktrace assembleVanillaRelease -PversionName="$VERSION_NAME"
      - android/save-gradle-cache
      - run:
          name: Prepare APK
          command: |
            mkdir -p Artifacts
            mv WooCommerce/build/outputs/apk/vanilla/release/WooCommerce-vanilla-release.apk "Artifacts/WooCommerce-${VERSION_NAME}.apk"
      - store_artifacts:
          path: Artifacts
          destination: Artifacts

workflows:
  "WooCommerce Android":
    jobs:
      - Lint
      - Test
      - Installable Build
      - Ensure Screenshots Tests Build
